syntax = "proto3";

package staff;

option go_package = "pkg/staff;staff";

// Комбинированный сервис для управления персоналом и авторизацией
service StaffService {
  // === Методы управления персоналом ===
  
  // Получение информации о сотруднике по ID
  rpc Get(GetIn) returns (GetOut) {}
  
  // Создание нового сотрудника
  rpc Create(CreateIn) returns (CreateOut) {}
  
  // Обновление информации о сотруднике
  rpc Update(UpdateIn) returns (UpdateOut) {}
  
  // Удаление сотрудника
  rpc Delete(DeleteIn) returns (DeleteOut) {}
  
  // Получение списка сотрудников с фильтрацией и пагинацией
  rpc List(ListIn) returns (ListOut) {}
  
  // === Методы авторизации ===
  
  // Авторизация сотрудника по логину и паролю
  rpc Login(LoginIn) returns (LoginOut) {}
  
  // Обновление токена сессии
  rpc RefreshToken(RefreshTokenIn) returns (RefreshTokenOut) {}
  
  // Выход из системы и завершение сессии
  rpc Logout(LogoutIn) returns (LogoutOut) {}
  
  // Проверка текущего статуса авторизации
  rpc CheckAuth(CheckAuthIn) returns (CheckAuthOut) {}
  
  // Изменение пароля авторизованного пользователя
  rpc ChangePassword(ChangePasswordIn) returns (ChangePasswordOut) {}
}

// === Сообщения для управления персоналом ===

// Запрос на получение информации о сотруднике
message GetIn {
  string id = 1;
}

// Ответ с информацией о сотруднике
message GetOut {
  Staff staff = 1;
}

// Запрос на создание сотрудника
message CreateIn {
  string login = 1;
  string password = 2;
  int32 role_id = 3;
  Permissions permissions = 4;
}

// Ответ с информацией о созданном сотруднике
message CreateOut {
  Staff staff = 1;
}

// Запрос на обновление информации о сотруднике
message UpdateIn {
  string id = 1;
  optional string login = 2;
  optional int32 role_id = 3;
  optional Permissions permissions = 4;
}

// Ответ с обновленной информацией о сотруднике
message UpdateOut {
  Staff staff = 1;
}

// Запрос на удаление сотрудника
message DeleteIn {
  string id = 1;
}

// Ответ на удаление сотрудника
message DeleteOut {
  bool success = 1;
}

// Запрос на получение списка сотрудников
message ListIn {
  int32 page = 1;
  int32 page_size = 2;
  optional string search_term = 3; // поиск по логину
  optional int32 role_id = 4; // фильтр по роли
}

// Ответ со списком сотрудников
message ListOut {
  repeated Staff staff = 1;
  int32 total_count = 2;
  int32 page_count = 3;
}

// Структура данных сотрудника
message Staff {
  string id = 1;
  string login = 2;
  int32 role_id = 3;
  string role_name = 4;
  Permissions permissions = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
}

// === Сообщения для авторизации ===

// Запрос на авторизацию
message LoginIn {
  string login = 1;
  string password = 2;
}

// Ответ на успешную авторизацию
message LoginOut {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_at = 3; // время истечения токена в unix timestamp
  Staff staff = 4;
}

// Запрос на обновление токена
message RefreshTokenIn {
  string refresh_token = 1;
}

// Ответ с обновленным токеном
message RefreshTokenOut {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_at = 3; // время истечения токена в unix timestamp
}

// Запрос на выход из системы
message LogoutIn {
  string access_token = 1;
}

// Ответ на выход из системы
message LogoutOut {
  bool success = 1;
}

// Запрос на проверку авторизации
message CheckAuthIn {
  string access_token = 1;
}

// Ответ на проверку авторизации
message CheckAuthOut {
  bool authorized = 1;
  Staff staff = 2;
}

// Запрос на смену пароля
message ChangePasswordIn {
  string old_password = 1;
  string new_password = 2;
  // access_token используется для идентификации пользователя
  string access_token = 3;
}

// Ответ на смену пароля
message ChangePasswordOut {
  bool success = 1;
}

// Структура разрешений сотрудника
message Permissions {
  repeated string access = 1;
}
