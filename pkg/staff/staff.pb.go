// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.1
// source: api/staff.proto

package staff

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на получение информации о сотруднике
type GetIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetIn) Reset() {
	*x = GetIn{}
	mi := &file_api_staff_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIn) ProtoMessage() {}

func (x *GetIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIn.ProtoReflect.Descriptor instead.
func (*GetIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{0}
}

func (x *GetIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Ответ с информацией о сотруднике
type GetOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *Staff `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *GetOut) Reset() {
	*x = GetOut{}
	mi := &file_api_staff_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOut) ProtoMessage() {}

func (x *GetOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOut.ProtoReflect.Descriptor instead.
func (*GetOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{1}
}

func (x *GetOut) GetStaff() *Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

// Запрос на создание сотрудника
type CreateIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login       string       `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password    string       `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	RoleId      int32        `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Permissions *Permissions `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *CreateIn) Reset() {
	*x = CreateIn{}
	mi := &file_api_staff_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIn) ProtoMessage() {}

func (x *CreateIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIn.ProtoReflect.Descriptor instead.
func (*CreateIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{2}
}

func (x *CreateIn) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *CreateIn) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateIn) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CreateIn) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Ответ с информацией о созданном сотруднике
type CreateOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *Staff `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *CreateOut) Reset() {
	*x = CreateOut{}
	mi := &file_api_staff_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOut) ProtoMessage() {}

func (x *CreateOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOut.ProtoReflect.Descriptor instead.
func (*CreateOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{3}
}

func (x *CreateOut) GetStaff() *Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

// Запрос на обновление информации о сотруднике
type UpdateIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login       *string      `protobuf:"bytes,2,opt,name=login,proto3,oneof" json:"login,omitempty"`
	RoleId      *int32       `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3,oneof" json:"role_id,omitempty"`
	Permissions *Permissions `protobuf:"bytes,4,opt,name=permissions,proto3,oneof" json:"permissions,omitempty"`
}

func (x *UpdateIn) Reset() {
	*x = UpdateIn{}
	mi := &file_api_staff_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIn) ProtoMessage() {}

func (x *UpdateIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIn.ProtoReflect.Descriptor instead.
func (*UpdateIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateIn) GetLogin() string {
	if x != nil && x.Login != nil {
		return *x.Login
	}
	return ""
}

func (x *UpdateIn) GetRoleId() int32 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *UpdateIn) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Ответ с обновленной информацией о сотруднике
type UpdateOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *Staff `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *UpdateOut) Reset() {
	*x = UpdateOut{}
	mi := &file_api_staff_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOut) ProtoMessage() {}

func (x *UpdateOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOut.ProtoReflect.Descriptor instead.
func (*UpdateOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateOut) GetStaff() *Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

// Запрос на удаление сотрудника
type DeleteIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteIn) Reset() {
	*x = DeleteIn{}
	mi := &file_api_staff_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIn) ProtoMessage() {}

func (x *DeleteIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIn.ProtoReflect.Descriptor instead.
func (*DeleteIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Ответ на удаление сотрудника
type DeleteOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteOut) Reset() {
	*x = DeleteOut{}
	mi := &file_api_staff_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOut) ProtoMessage() {}

func (x *DeleteOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOut.ProtoReflect.Descriptor instead.
func (*DeleteOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteOut) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на получение списка сотрудников
type ListIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SearchTerm *string `protobuf:"bytes,3,opt,name=search_term,json=searchTerm,proto3,oneof" json:"search_term,omitempty"` // поиск по логину
	RoleId     *int32  `protobuf:"varint,4,opt,name=role_id,json=roleId,proto3,oneof" json:"role_id,omitempty"`            // фильтр по роли
}

func (x *ListIn) Reset() {
	*x = ListIn{}
	mi := &file_api_staff_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIn) ProtoMessage() {}

func (x *ListIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIn.ProtoReflect.Descriptor instead.
func (*ListIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{8}
}

func (x *ListIn) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListIn) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListIn) GetSearchTerm() string {
	if x != nil && x.SearchTerm != nil {
		return *x.SearchTerm
	}
	return ""
}

func (x *ListIn) GetRoleId() int32 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

// Ответ со списком сотрудников
type ListOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff      []*Staff `protobuf:"bytes,1,rep,name=staff,proto3" json:"staff,omitempty"`
	TotalCount int32    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageCount  int32    `protobuf:"varint,3,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
}

func (x *ListOut) Reset() {
	*x = ListOut{}
	mi := &file_api_staff_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOut) ProtoMessage() {}

func (x *ListOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOut.ProtoReflect.Descriptor instead.
func (*ListOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{9}
}

func (x *ListOut) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *ListOut) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListOut) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

// Структура данных сотрудника
type Staff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login       string       `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	RoleId      int32        `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName    string       `protobuf:"bytes,4,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Permissions *Permissions `protobuf:"bytes,5,opt,name=permissions,proto3" json:"permissions,omitempty"`
	CreatedAt   int64        `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64        `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Staff) Reset() {
	*x = Staff{}
	mi := &file_api_staff_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staff) ProtoMessage() {}

func (x *Staff) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staff.ProtoReflect.Descriptor instead.
func (*Staff) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{10}
}

func (x *Staff) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Staff) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Staff) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *Staff) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *Staff) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Staff) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Staff) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// Запрос на авторизацию
type LoginIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login    string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginIn) Reset() {
	*x = LoginIn{}
	mi := &file_api_staff_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginIn) ProtoMessage() {}

func (x *LoginIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginIn.ProtoReflect.Descriptor instead.
func (*LoginIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{11}
}

func (x *LoginIn) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *LoginIn) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Ответ на успешную авторизацию
type LoginOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresAt    int64  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // время истечения токена в unix timestamp
	Staff        *Staff `protobuf:"bytes,4,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *LoginOut) Reset() {
	*x = LoginOut{}
	mi := &file_api_staff_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginOut) ProtoMessage() {}

func (x *LoginOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginOut.ProtoReflect.Descriptor instead.
func (*LoginOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{12}
}

func (x *LoginOut) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginOut) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginOut) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *LoginOut) GetStaff() *Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

// Запрос на обновление токена
type RefreshTokenIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *RefreshTokenIn) Reset() {
	*x = RefreshTokenIn{}
	mi := &file_api_staff_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenIn) ProtoMessage() {}

func (x *RefreshTokenIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenIn.ProtoReflect.Descriptor instead.
func (*RefreshTokenIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{13}
}

func (x *RefreshTokenIn) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// Ответ с обновленным токеном
type RefreshTokenOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresAt    int64  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // время истечения токена в unix timestamp
}

func (x *RefreshTokenOut) Reset() {
	*x = RefreshTokenOut{}
	mi := &file_api_staff_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenOut) ProtoMessage() {}

func (x *RefreshTokenOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenOut.ProtoReflect.Descriptor instead.
func (*RefreshTokenOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshTokenOut) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenOut) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenOut) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// Запрос на выход из системы
type LogoutIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LogoutIn) Reset() {
	*x = LogoutIn{}
	mi := &file_api_staff_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutIn) ProtoMessage() {}

func (x *LogoutIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutIn.ProtoReflect.Descriptor instead.
func (*LogoutIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{15}
}

func (x *LogoutIn) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// Ответ на выход из системы
type LogoutOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *LogoutOut) Reset() {
	*x = LogoutOut{}
	mi := &file_api_staff_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutOut) ProtoMessage() {}

func (x *LogoutOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutOut.ProtoReflect.Descriptor instead.
func (*LogoutOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{16}
}

func (x *LogoutOut) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на проверку авторизации
type CheckAuthIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *CheckAuthIn) Reset() {
	*x = CheckAuthIn{}
	mi := &file_api_staff_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAuthIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuthIn) ProtoMessage() {}

func (x *CheckAuthIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuthIn.ProtoReflect.Descriptor instead.
func (*CheckAuthIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{17}
}

func (x *CheckAuthIn) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// Ответ на проверку авторизации
type CheckAuthOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorized bool   `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Staff      *Staff `protobuf:"bytes,2,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *CheckAuthOut) Reset() {
	*x = CheckAuthOut{}
	mi := &file_api_staff_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAuthOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuthOut) ProtoMessage() {}

func (x *CheckAuthOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuthOut.ProtoReflect.Descriptor instead.
func (*CheckAuthOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{18}
}

func (x *CheckAuthOut) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CheckAuthOut) GetStaff() *Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

// Запрос на смену пароля
type ChangePasswordIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassword string `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	// access_token используется для идентификации пользователя
	AccessToken string `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *ChangePasswordIn) Reset() {
	*x = ChangePasswordIn{}
	mi := &file_api_staff_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordIn) ProtoMessage() {}

func (x *ChangePasswordIn) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordIn.ProtoReflect.Descriptor instead.
func (*ChangePasswordIn) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{19}
}

func (x *ChangePasswordIn) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ChangePasswordIn) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ChangePasswordIn) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// Ответ на смену пароля
type ChangePasswordOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ChangePasswordOut) Reset() {
	*x = ChangePasswordOut{}
	mi := &file_api_staff_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordOut) ProtoMessage() {}

func (x *ChangePasswordOut) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordOut.ProtoReflect.Descriptor instead.
func (*ChangePasswordOut) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{20}
}

func (x *ChangePasswordOut) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Структура разрешений сотрудника
type Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Access []string `protobuf:"bytes,1,rep,name=access,proto3" json:"access,omitempty"`
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	mi := &file_api_staff_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_api_staff_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_api_staff_proto_rawDescGZIP(), []int{21}
}

func (x *Permissions) GetAccess() []string {
	if x != nil {
		return x.Access
	}
	return nil
}

var File_api_staff_proto protoreflect.FileDescriptor

var file_api_staff_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x22, 0x17, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x22,
	0x8b, 0x01, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2f, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x22, 0xb4,
	0x01, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x02, 0x52,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x22, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x25, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x06, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74,
	0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3b,
	0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x08,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x22, 0x35, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x78, 0x0a, 0x0f, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x22, 0x2d, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x49, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x25, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4f, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x0b, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x52, 0x0a, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x22, 0x7b, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2d, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x25, 0x0a, 0x0b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x32, 0x85, 0x04, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0c, 0x2e, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0d, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x1a, 0x0e,
	0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00,
	0x12, 0x2a, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x1a, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x2e, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a,
	0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x1a, 0x13, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x4f,
	0x75, 0x74, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x1a,
	0x18, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x70,
	0x6b, 0x67, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x3b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_staff_proto_rawDescOnce sync.Once
	file_api_staff_proto_rawDescData = file_api_staff_proto_rawDesc
)

func file_api_staff_proto_rawDescGZIP() []byte {
	file_api_staff_proto_rawDescOnce.Do(func() {
		file_api_staff_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_staff_proto_rawDescData)
	})
	return file_api_staff_proto_rawDescData
}

var file_api_staff_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_staff_proto_goTypes = []any{
	(*GetIn)(nil),             // 0: staff.GetIn
	(*GetOut)(nil),            // 1: staff.GetOut
	(*CreateIn)(nil),          // 2: staff.CreateIn
	(*CreateOut)(nil),         // 3: staff.CreateOut
	(*UpdateIn)(nil),          // 4: staff.UpdateIn
	(*UpdateOut)(nil),         // 5: staff.UpdateOut
	(*DeleteIn)(nil),          // 6: staff.DeleteIn
	(*DeleteOut)(nil),         // 7: staff.DeleteOut
	(*ListIn)(nil),            // 8: staff.ListIn
	(*ListOut)(nil),           // 9: staff.ListOut
	(*Staff)(nil),             // 10: staff.Staff
	(*LoginIn)(nil),           // 11: staff.LoginIn
	(*LoginOut)(nil),          // 12: staff.LoginOut
	(*RefreshTokenIn)(nil),    // 13: staff.RefreshTokenIn
	(*RefreshTokenOut)(nil),   // 14: staff.RefreshTokenOut
	(*LogoutIn)(nil),          // 15: staff.LogoutIn
	(*LogoutOut)(nil),         // 16: staff.LogoutOut
	(*CheckAuthIn)(nil),       // 17: staff.CheckAuthIn
	(*CheckAuthOut)(nil),      // 18: staff.CheckAuthOut
	(*ChangePasswordIn)(nil),  // 19: staff.ChangePasswordIn
	(*ChangePasswordOut)(nil), // 20: staff.ChangePasswordOut
	(*Permissions)(nil),       // 21: staff.Permissions
}
var file_api_staff_proto_depIdxs = []int32{
	10, // 0: staff.GetOut.staff:type_name -> staff.Staff
	21, // 1: staff.CreateIn.permissions:type_name -> staff.Permissions
	10, // 2: staff.CreateOut.staff:type_name -> staff.Staff
	21, // 3: staff.UpdateIn.permissions:type_name -> staff.Permissions
	10, // 4: staff.UpdateOut.staff:type_name -> staff.Staff
	10, // 5: staff.ListOut.staff:type_name -> staff.Staff
	21, // 6: staff.Staff.permissions:type_name -> staff.Permissions
	10, // 7: staff.LoginOut.staff:type_name -> staff.Staff
	10, // 8: staff.CheckAuthOut.staff:type_name -> staff.Staff
	0,  // 9: staff.StaffService.Get:input_type -> staff.GetIn
	2,  // 10: staff.StaffService.Create:input_type -> staff.CreateIn
	4,  // 11: staff.StaffService.Update:input_type -> staff.UpdateIn
	6,  // 12: staff.StaffService.Delete:input_type -> staff.DeleteIn
	8,  // 13: staff.StaffService.List:input_type -> staff.ListIn
	11, // 14: staff.StaffService.Login:input_type -> staff.LoginIn
	13, // 15: staff.StaffService.RefreshToken:input_type -> staff.RefreshTokenIn
	15, // 16: staff.StaffService.Logout:input_type -> staff.LogoutIn
	17, // 17: staff.StaffService.CheckAuth:input_type -> staff.CheckAuthIn
	19, // 18: staff.StaffService.ChangePassword:input_type -> staff.ChangePasswordIn
	1,  // 19: staff.StaffService.Get:output_type -> staff.GetOut
	3,  // 20: staff.StaffService.Create:output_type -> staff.CreateOut
	5,  // 21: staff.StaffService.Update:output_type -> staff.UpdateOut
	7,  // 22: staff.StaffService.Delete:output_type -> staff.DeleteOut
	9,  // 23: staff.StaffService.List:output_type -> staff.ListOut
	12, // 24: staff.StaffService.Login:output_type -> staff.LoginOut
	14, // 25: staff.StaffService.RefreshToken:output_type -> staff.RefreshTokenOut
	16, // 26: staff.StaffService.Logout:output_type -> staff.LogoutOut
	18, // 27: staff.StaffService.CheckAuth:output_type -> staff.CheckAuthOut
	20, // 28: staff.StaffService.ChangePassword:output_type -> staff.ChangePasswordOut
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_staff_proto_init() }
func file_api_staff_proto_init() {
	if File_api_staff_proto != nil {
		return
	}
	file_api_staff_proto_msgTypes[4].OneofWrappers = []any{}
	file_api_staff_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_staff_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_staff_proto_goTypes,
		DependencyIndexes: file_api_staff_proto_depIdxs,
		MessageInfos:      file_api_staff_proto_msgTypes,
	}.Build()
	File_api_staff_proto = out.File
	file_api_staff_proto_rawDesc = nil
	file_api_staff_proto_goTypes = nil
	file_api_staff_proto_depIdxs = nil
}
